classDiagram
    %% 도메인 모델 다이어그램: 게임의 핵심 객체와 상태

    %% 주요 객체 관계
    Player "1" --* "1" Inventory : 보유함
    GameState "1" --* "1" Player : 관리함
    Item -- ItemType : 타입
    Item "1" --* "1" Recipe : 제작법
    Inventory --> Item : 포함
    GameState --> Event : 트리거
    Event -- EventType : 이벤트 종류

    %% 열거형 관계
    GameState -- GameEndState : 상태
    RandomGenerator -- ResourceType : 사용

    %% 게임 로직 핵심 클래스
    class Player {
        -int hp
        -int maxHp
        -int ap
        -Inventory inventory
        +Player()
        +useAP(int amount) void
        +updateHP(int amount) void
        +hasAP(int amount) boolean
        +reset() void
        +getInventory() Inventory
        +getHp() int
        +getMaxHp() int
        +getAp() int
        +setAp(int ap) void
        +addBonusAP(int bonus) void
    }
    
    class Inventory {
        -Map~String, Integer~ resources
        -Map~String, Integer~ items
        +Inventory()
        +addResource(String name, int amount) void
        +removeResource(String name, int amount) boolean
        +addItem(String name) void
        +removeItem(String name, int amount) boolean
        +hasResource(String name) boolean
        +hasResources(Map~String, Integer~ required) boolean
        +hasItem(String name) boolean
        +getResourceCount(String name) int
        +getItemCount(String name) int
        +getResources() Map~String, Integer~
        +getItems() Map~String, Integer~
        +toString() String
    }
    
    class Item {
        -String name
        -ItemType type
        -Recipe recipe
        +Item(String name, ItemType type, Recipe recipe)
        +canCraft(Inventory inventory) boolean
        +getName() String
        +getType() ItemType
        +getRecipe() Recipe
    }
    
    class ItemType {
        <<열거형>>
        TOOL
        SHELTER
        SURVIVAL
        RAFT
    }
    
    class ResourceType {
        <<열거형>>
        WOOD: "나무"
        STONE: "돌"
        FOOD: "식량"
        WATER: "물"
        CLOTH: "천"
        METAL: "금속"
        +getLabel() String
        +fromLabel(String label) ResourceType
    }
    
    class GameEndState {
        <<열거형>>
        VICTORY: "탈출에 성공했습니다!"
        DEATH: "체력이 0이 되어 사망했습니다..."
        GIVE_UP: "게임을 포기했습니다."
        -String message
        +getMessage() String
    }
    
    class Recipe {
        -Map~String, Integer~ resources
        -Map~String, Integer~ items
        +Recipe(Map~String, Integer~ resources, Map~String, Integer~ items)
        +canCraft(Inventory inventory) boolean
        +consumeResources(Inventory inventory) void
        +getResourceRequirements() Map~String, Integer~
        +getItemRequirements() Map~String, Integer~
    }
    
    class GameState {
        -int day
        -Player player
        -boolean gameOver
        -boolean victory
        -GameEndState endState
        +GameState()
        +nextDay() void
        +endGame(boolean victory) void
        +endGame(GameEndState endState) void
        +isGameOver() boolean
        +isVictory() boolean
        +getEndState() GameEndState
        +getDay() int
        +getPlayer() Player
        +checkVictoryCondition() boolean
    }
    
    class Event {
        -EventType type
        -String description
        -Consumer~Player~ effect
        +Event(EventType type, String description, Consumer~Player~ effect)
        +execute(Player player) void
        +getType() EventType
        +getDescription() String
    }
    
    class EventType {
        <<열거형>>
        RESOURCE_GAIN
        DAMAGE
        HEAL
        SPECIAL
    }
    
    class RandomGenerator {
        -Random random
        +RandomGenerator()
        +getRandomResourceType() ResourceType
        +getRandomResource() String
        +isEventTriggered() boolean
        +generateRandomEvent() Event
        +getRandomNumber(int min, int max) int
    } 